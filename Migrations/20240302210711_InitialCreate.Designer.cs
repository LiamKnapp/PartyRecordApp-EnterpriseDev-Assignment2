// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PartyRecordApp.Entities;

#nullable disable

namespace StudentRecordApp.Migrations
{
    [DbContext(typeof(PartyDbContext))]
    [Migration("20240302210711_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PartyRecordApp.Entities.Invitation", b =>
                {
                    b.Property<int>("InvitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvitationId"));

                    b.Property<string>("GuestEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartyId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("InvitationId");

                    b.HasIndex("PartyId");

                    b.ToTable("Invitation");

                    b.HasData(
                        new
                        {
                            InvitationId = 1,
                            GuestEmail = "guest1@example.com",
                            GuestName = "Guest 1",
                            PartyId = 1,
                            Status = "InviteSent"
                        },
                        new
                        {
                            InvitationId = 2,
                            GuestEmail = "guest2@example.com",
                            GuestName = "Guest 2",
                            PartyId = 2,
                            Status = "InviteSent"
                        });
                });

            modelBuilder.Entity("PartyRecordApp.Entities.Party", b =>
                {
                    b.Property<int>("PartyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartyId"));

                    b.Property<string>("EventDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartyId");

                    b.ToTable("Party");

                    b.HasData(
                        new
                        {
                            PartyId = 1,
                            EventDate = "2024-03-02",
                            EventDescription = "Party 1 Description",
                            EventLocation = "Location 1"
                        },
                        new
                        {
                            PartyId = 2,
                            EventDate = "2024-03-03",
                            EventDescription = "Party 2 Description",
                            EventLocation = "Location 2"
                        });
                });

            modelBuilder.Entity("PartyRecordApp.Entities.Invitation", b =>
                {
                    b.HasOne("PartyRecordApp.Entities.Party", "Party")
                        .WithMany("Invitations")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("PartyRecordApp.Entities.Party", b =>
                {
                    b.Navigation("Invitations");
                });
#pragma warning restore 612, 618
        }
    }
}
